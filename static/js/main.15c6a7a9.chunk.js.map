{"version":3,"sources":["Commons.jsx","api.js","Home.jsx","Control.jsx","Vote.jsx","App.jsx","index.jsx"],"names":["Button","text","className","disabled","onClick","classes","push","join","baseUrl","httpBaseUri","NewSessionButton","choices","history","useHistory","onSuccess","fetch","method","body","JSON","stringify","then","res","status","headers","get","createSession","session","Home","Share","sessionId","useParams","url","window","location","origin","navigator","clipboard","writeText","ControlButton","open","hasVotes","stopVote","resetVote","startVote","Result","participants","votes","inProgress","length","map","name","i","vote","Aggregate","keys","Object","values","item","parseInt","filter","isNaN","avg","reduce","a","b","med","median","toFixed","ResultRow","markVoted","KickButton","kickParticipant","Control","useState","setSession","ws","useRef","setAnimated","useContext","LogoAnimationContext","useEffect","Promise","all","json","code","getSession","Open","current","WebSocket","close","onmessage","e","event","parse","data","Kind","Data","Participants","Votes","TextInput","value","autoFocus","onChange","onEnter","htmlFor","id","type","onKeyPress","key","JoinForm","defaultValue","onClickJoin","setValue","handleClick","target","Session","setChoices","selected","setSelected","enabled","setEnabled","reloadWs","setReloadWs","getChoices","Choices","newWs","onclose","cur","c","choice","VoteButton","Participant","Choice","Vote","setName","saveName","localStorage","setItem","onAlreadyJoined","getItem","createContext","Header","logoClasses","animate","to","App","animated","Provider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c6a7a9.chunk.js","sourcesContent":["export const Button = ({ text, className, disabled, onClick }) => {\n  const classes = [\"big\"]\n  if (className) {\n    classes.push(className)\n  }\n\n  return (\n    <button onClick={onClick} className={classes.join(\" \")} disabled={disabled}>\n      {text}\n    </button>)\n}","export const baseUrl = \"api.pajthy.akarasz.me\"\nconst httpBaseUri = \"https://\" + baseUrl\n\nexport const createSession = (choices, onSuccess) => (\n  fetch(httpBaseUri, {\n    method: \"POST\",\n    body: JSON.stringify(choices),\n  })\n  .then(res => {\n    if (res.status === 201) {\n      onSuccess?.(res.headers.get(\"location\"))\n    } else {\n      throw res\n    }\n  }))\n\nexport const choices = (sessionId, onSuccess) => (\n  fetch(httpBaseUri + \"/\" + sessionId, {\n    method: \"GET\",\n  })\n  .then(res => Promise.all([res.status, res.json()]))\n  .then(([code, body]) => {\n    if (code === 200) {\n      onSuccess?.(body)\n    } else {\n      throw (code, body)\n    }\n  }))\n\nexport const vote = (sessionId, name, choice, onSuccess) => (\n  fetch(httpBaseUri + \"/\" + sessionId, {\n    method: \"PUT\",\n    body: JSON.stringify({Participant: name, Choice: choice}),\n  })\n  .then(res => {\n    if (res.status === 202) {\n      onSuccess?.()\n    } else {\n      throw res\n    }\n  }))\n\nexport const getSession = (sessionId, onSuccess) => (\n  fetch(httpBaseUri + \"/\" + sessionId + \"/control\", {\n    method: \"GET\",\n  })\n  .then(res => Promise.all([res.status, res.json()]))\n  .then(([code, body]) => {\n    if (code === 200) {\n      onSuccess?.(body)\n    } else {\n      throw (code, body)\n    }\n  }))\n\nexport const startVote = (sessionId, onSuccess) => (\n  fetch(httpBaseUri + \"/\" + sessionId + \"/control/start\", {\n    method: \"PATCH\",\n  })\n  .then(res => {\n    if (res.status === 202) {\n      onSuccess?.()\n    } else {\n      throw res\n    }\n  }))\n\nexport const stopVote = (sessionId, onSuccess) => (\n  fetch(httpBaseUri + \"/\" + sessionId + \"/control/stop\", {\n    method: \"PATCH\",\n  })\n  .then(res => {\n    if (res.status === 202) {\n      onSuccess?.()\n    } else {\n      throw res\n    }\n  }))\n\nexport const resetVote = (sessionId, onSuccess) => (\n  fetch(httpBaseUri + \"/\" + sessionId + \"/control/reset\", {\n    method: \"PATCH\",\n  })\n  .then(res => {\n    if (res.status === 202) {\n      onSuccess?.()\n    } else {\n      throw res\n    }\n  }))\n\nexport const kickParticipant = (sessionId, name, onSuccess) => (\n  fetch(httpBaseUri + \"/\" + sessionId + \"/control/kick\", {\n    method: \"PATCH\",\n    body: name,\n  })\n  .then(res => {\n    if (res.status === 204) {\n      onSuccess?.()\n    } else {\n      throw res\n    }\n  }))\n\nexport const join = (sessionId, name, onSuccess, onAlreadyJoined) => (\n  fetch(httpBaseUri + \"/\" + sessionId + \"/join\", {\n    method: \"PUT\",\n    body: name,\n  })\n  .then(res => {\n    if (res.status === 201) {\n      onSuccess?.()\n    } else if (res.status === 409) {\n      onAlreadyJoined?.()\n    } else {\n      throw res\n    }\n  }))\n","import { useHistory } from \"react-router-dom\"\n\nimport { Button } from \"./Commons.jsx\"\n\nimport { createSession } from \"./api.js\"\n\nconst NewSessionButton = ({ text, choices }) => {\n  const history = useHistory()\n\n  const handleClick = () => {\n    createSession(choices, (session) => history.push(session + \"/control\"))\n  }\n\n  return <Button text={text} onClick={handleClick} />\n}\n\nconst Home = () => (\n  <div className=\"content\">\n    <NewSessionButton text=\"Fibonacci\" choices={[\"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"?\"]} />\n    <NewSessionButton text=\"T-Shirt\" choices={[\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\", \"?\"]} />\n    <NewSessionButton text=\"✋\" choices={[\"👍\", \"👌\", \"🤷\", \"👎\", \"🖕\"]} />\n    <NewSessionButton text=\"Spotify Helath Check 🚦\" choices={[\"🔴\", \"🟡\", \"🟢\"]} />\n  </div>)\n\nexport default Home\n","import { useState, useEffect, useContext, useRef } from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nimport { LogoAnimationContext } from \"./App.jsx\"\nimport { Button } from \"./Commons.jsx\"\n\nimport { getSession, startVote, stopVote, resetVote, kickParticipant } from \"./api.js\"\nimport { baseUrl } from \"./api.js\"\n\nimport median from \"median\"\n\nconst Share = () => {\n  const { sessionId } = useParams()\n\n  const url = window.location.origin + \"/\" + sessionId\n\n  const handleClick = () => {\n    navigator.clipboard\n      .writeText(url)\n  }\n\n  return (\n    <div className=\"share\">\n      <div className=\"link\">{url}</div>\n      <button onClick={handleClick}>Copy</button>\n    </div>)\n}\n\nconst ControlButton = ({ open, hasVotes }) => {\n  const { sessionId } = useParams()\n\n  if (open) {\n    return <Button text=\"STAHP!\" className=\"danger\" onClick={() => stopVote(sessionId)} />\n  }\n\n  if (hasVotes) {\n    return <Button text=\"Reset\" onClick={() => resetVote(sessionId)} />\n  }\n\n  return <Button text=\"Begin voting!\" onClick={() => startVote(sessionId)} />\n}\n\nconst Result = ({ participants, votes, inProgress }) => {\n  if (participants.length === 0) {\n    return null\n  }\n\n  return (\n    <table className=\"votes\">\n      <tbody>\n        {participants.map((name, i) =>\n          <ResultRow key={i} name={name} vote={votes[name]} inProgress={inProgress} />\n        )}\n      </tbody>\n    </table>)\n}\n\nconst Aggregate = ({votes}) => {\n  const keys = Object.keys(votes)\n  const values = Object.values(votes).map(item => parseInt(item))\n  if (keys.length <= 0) {\n    return null\n  }\n\n  if (values.filter(item => isNaN(item)).length > 0) {\n    return null\n  }\n\n  const avg = values.reduce((a, b) => a + b) / values.length\n  const med = median(values)\n\n  return (\n    <table className=\"aggregate\">\n      <tbody>\n        <tr>\n          <td>Average</td>\n          <td>{avg.toFixed(2)}</td>\n        </tr>\n        <tr>\n          <td>Median</td>\n          <td>{med.toFixed(2)}</td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nconst ResultRow = ({ name, vote, inProgress }) => {\n  const markVoted = inProgress && vote\n\n  return (\n    <tr className={markVoted ? \"already-voted\" : null}>\n      <td>{name} <KickButton name={name} /></td>\n      <td>{inProgress ? null : vote}</td>\n    </tr>)\n}\n\nconst KickButton = ({ name }) => {\n  const { sessionId } = useParams()\n\n  return <span className=\"kick\" onClick={() => kickParticipant(sessionId, name)}>(X)</span>\n}\n\nconst Control = () => {\n  const [session, setSession] = useState(null)\n  const { sessionId } = useParams()\n  const ws = useRef(null)\n  const { setAnimated } = useContext(LogoAnimationContext)\n\n  useEffect(() => {\n    getSession(sessionId, (res) => {\n      setSession(res)\n      setAnimated(res.Open)\n    })\n  }, [sessionId, setAnimated])\n\n  useEffect(() => { // handle websocket creation\n    ws.current = new WebSocket(\"wss://\" + baseUrl + \"/\" + sessionId + \"/control/ws\")\n\n    return () => {\n      ws.current.close();\n    }\n  }, [sessionId, setAnimated])\n\n  useEffect(() => { // handle websocket onevent\n    if (!ws.current) {\n      return\n    }\n\n    ws.current.onmessage = (e) => {\n      const event = JSON.parse(e.data)\n\n      switch(event.Kind) {\n        case \"enabled\":\n          setAnimated(true)\n          break\n        case \"disabled\":\n        case \"reset\":\n          setAnimated(false)\n          break\n        default:\n          break\n      }\n\n      setSession(current => { return { ...current, ...event.Data } })\n    }\n  }, [sessionId, setAnimated])\n\n  if (!session) {\n    return null\n  }\n\n  const participants = session.Participants || []\n  const votes = session.Votes || {}\n\n  return (\n    <div className=\"admin content\">\n      <Share />\n      <ControlButton open={session.Open} hasVotes={(Object.keys(votes)).length > 0} />\n      <Result participants={participants} votes={votes} inProgress={session.Open} />\n      {session.Open ? null : <Aggregate votes={votes}/>}\n    </div>)\n}\n\nexport default Control\n","import { useState, useEffect, useContext, useRef } from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nimport { LogoAnimationContext } from \"./App.jsx\"\nimport { Button } from \"./Commons.jsx\"\n\nimport { join, choices as getChoices, vote } from \"./api.js\"\nimport { baseUrl } from \"./api.js\"\n\nconst TextInput = ({ name, value, autoFocus, onChange, onEnter }) => {\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      onEnter?.()\n    }\n  }\n\n  return (\n    <div className=\"pair\">\n      <label htmlFor={name}>{name}</label>\n      <input\n        id={name}\n        type=\"text\"\n        autoFocus={autoFocus}\n        value={value}\n        onChange={onChange}\n        onKeyPress={handleKeyPress} />\n\n    </div>)\n}\n\nconst JoinForm = ({ defaultValue, onClickJoin }) => {\n  const [value, setValue] = useState(defaultValue)\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleClick = () => {\n    onClickJoin(value)\n  }\n\n  return (<div className=\"content\">\n    <TextInput\n      name=\"Name\"\n      value={value}\n      onChange={handleChange}\n      onEnter={handleClick}\n      autoFocus />\n    <Button text=\"Join\" onClick={handleClick} />\n  </div>)\n}\n\nconst Session = ({ name }) => {\n  const [choices, setChoices] = useState([])\n  const [selected, setSelected] = useState(null)\n  const [enabled, setEnabled] = useState(false)\n  const { sessionId } = useParams()\n  const ws = useRef(null)\n  const [reloadWs, setReloadWs] = useState(false)\n  const { setAnimated } = useContext(LogoAnimationContext)\n\n  useEffect(() => {\n    getChoices(sessionId, (res) => {\n      setChoices(res.Choices)\n      setEnabled(res.Open)\n      setAnimated(res.Open)\n    })\n  }, [sessionId, setAnimated, reloadWs])\n\n  useEffect(() => { // handle websocket creation\n    const newWs = new WebSocket(\"wss://\" + baseUrl + \"/\" + sessionId + \"/ws\")\n    ws.current = newWs\n\n    return () => {\n      newWs.close();\n    }\n  }, [sessionId, reloadWs])\n\n  useEffect(() => { // handle websocket onevent\n    if (!ws.current) {\n      return\n    }\n\n    ws.current.onmessage = (e) => {\n      const event = JSON.parse(e.data)\n      if (event.Kind === \"enabled\") {\n        setEnabled(true)\n        setAnimated(true)\n        setSelected(null)\n      } else if (event.Kind === \"disabled\") {\n        setEnabled(false)\n        setAnimated(false)\n      } else if (event.Kind === \"reset\") {\n        setEnabled(false)\n        setAnimated(false)\n        setSelected(null)\n      }\n    }\n\n    ws.current.onclose = () => {\n      ws.current = null\n      setReloadWs(cur => !cur)\n    }\n  }, [sessionId, setAnimated, reloadWs])\n\n  return (\n    <div className=\"content\">\n      {choices.map((c, i) =>\n        <VoteButton\n          key={i}\n          choice={c}\n          name={name}\n          enabled={enabled}\n          selected={selected === c}\n          onClick={setSelected} />\n      )}\n    </div>)\n}\n\nconst VoteButton = ({ name, choice, enabled, selected, onClick }) => {\n  const { sessionId } = useParams()\n\n  const handleClick = (choice) => {\n    vote(sessionId, name, choice, () => onClick(choice))\n  }\n\n  return (\n    <Button\n      className={selected ? \"selected\": null}\n      text={choice}\n      disabled={!enabled}\n      onClick={() => handleClick(choice)} />\n    )\n}\n\nconst Vote = () => {\n  const [name, setName] = useState(null)\n  const { sessionId } = useParams()\n\n  const saveName = (name) => {\n    window.localStorage.setItem(\"name\", name)\n    setName(name)\n  }\n\n  if (name === null) {\n    const handleJoin = (name) => {\n      join(\n        sessionId,\n        name,\n        () => saveName(name),\n        () => saveName(name))\n    }\n\n    return (\n      <JoinForm\n        onClickJoin={handleJoin}\n        defaultValue={name || window.localStorage.getItem(\"name\") || \"\"} />)\n  } else {\n    return <Session name={name} />\n  }\n}\n\nexport default Vote","import { createContext, useState } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\n\nimport Home from \"./Home.jsx\"\nimport Control from \"./Control.jsx\"\nimport Vote from \"./Vote.jsx\"\n\nexport const LogoAnimationContext = createContext({})\n\nconst App = () => {\n  const [animated, setAnimated] = useState(false)\n\n  return (\n    <LogoAnimationContext.Provider value={{animated, setAnimated}}>\n      <div className=\"pajthy\">\n        <Router>\n          <Header animate={animated} />\n          <div className=\"countdown\"></div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/:sessionId/control\">\n              <Control />\n            </Route>\n            <Route path=\"/:sessionId\">\n              <Vote />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </LogoAnimationContext.Provider>)\n}\n\nconst Header = ({ animate }) => {\n  const logoClasses = [\"logo\"]\n  if (animate) {\n    logoClasses.push(\"animate\")\n  }\n\n  return (\n    <header>\n      <div className={logoClasses.join(\" \")}></div>\n      <div className=\"title\">\n        <h1><Link to=\"/\">Pajthy</Link></h1>\n        <p className=\"subtitle\">easy voting for your remote scrum ceremonies</p>\n      </div>\n    </header>)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}